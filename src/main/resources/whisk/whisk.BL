export kotlin_compile, kotlin_test, maven_library, build_jar, prebuilt_jar, remote_file, glob, antlr_gen, rglob,
    exec

# Define rules with "native" implementation
# Usually rules are defined by "rule(...) = value", omitting "= value" marks them as being implemented in code

# Rule to compile kotlin (and potentially java)
kotlin_compile(compiler, srcs:[], cp:[], exported_deps:[], kapt_processors: [], plugins: [], additional_parameters: [])

# Rule to compile and run test on kotlin code
kotlin_test(compiler, srcs:[], cp:[], additional_parameters: [])

# Rule to depend on maven artifacts (transitively)
maven_library(artifacts:[], repository_urls:[], scopes:[])

# Rule to build a jar from a list of files
build_jar(name?,files:[],main_class)

# Rule to depend on a locally existing jar file
prebuilt_jar(binary_jar)

# Rule to depend on a remote file
remote_file(url, sha1)

# Rules marked with "anon" can also be called within other rule calls, ie. "rule(glob(..))" is allowed while "ruleA(ruleB(..))" will fail unless ruleB is anonymous.
# Rule to depend on files given a glob pattern (ie. "src/main/**.java")
anon glob(pattern:[])

anon rglob(pattern:[], root)

# Rule to generate lexers and parsers from ANTLR grammars
antlr_gen(srcs: [], arguments: [])


# Run external program
exec(src, arguments:[])
